countFirstLine = 0
countLastLine = 0

findFirstBoxLeft = 0
findFirstBoxRight = 0
firstBoxLeft = 10
firstBoxRight = 10

lastBoxLeft = 0
lastBoxRight = 0

countForward = 0

# conta a quantidade de caixas da linha de cima
procedure countLeft{
    if(leftIsObstacle){
        countFirstLine = countFirstLine + 1
        
        if(not findFirstBoxLeft == 0){
            firstBoxLeft = countForward
            findFirstBoxLeft = 1
        }    
        
        lastBoxLeft = countForward              
    }
}

# conta a quantidade de caixas da linha de baixo
procedure countRight(){
    if(rightIsObstacle){
        countLastLine = countLastLine + 1
        
        if(not findFirstBoxRight == 0){
            firstBoxRight = countForward
            findFirstBoxRight = 1
        }
        
        lastBoxRight = countForward
    }
}

# mostra a linha com mais caixas e a diferença entre elas
procedure showsMoreBoxes(){
    
    if(countFirstLine > countLastLine){
        show(1)
        show(countFirstLine - countLastLine)
    } else if(countFirstLine < countLastLine){
        show(2)
        show(countLastLine - countFirstLine)
    } else{
        show(3)
        show(countLastLine - countFirstLine)
    }
}

# mostra qual das linhas tem a primeira caixa
procedure getBoxFirstLine(){
    if(firstBoxLeft < firstBoxRight){
        show(1)
    } else if(firstBoxLeft > firstBoxRight){
        show(2)
    } else {
        show(3)
    }
}

# mostra qual das linhas tem a última caixa
procedure getBoxLastLine(){
    if(lastBoxLeft > lastBoxRight){
        show(1)
    } else if(lastBoxLeft < lastBoxRight){
        show(2)
    } else {
        show(3)
    }
}

# instrucoes do robo

right
    
repeatWhile(frontIsClear){
    countLeft()
    countRight()  
    forward(1)
    countForward = countForward + 1
}

countLeft()
countRight()  
show(countFirstLine)
show(countLastLine)
showsMoreBoxes()
getBoxFirstLine()
getBoxLastLine()
